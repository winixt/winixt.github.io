{"name":"js","slug":"js","count":3,"postlist":[{"title":"js Map 和 WeakMap","slug":"Map 和 WeakMap","date":"2019-03-19T16:00:00.000Z","updated":"2019-03-20T10:13:12.404Z","comments":true,"path":"api/articles/Map 和 WeakMap.json","excerpt":"<h2 id=\"TL-DR\"><a href=\"#TL-DR\" class=\"headerlink\" title=\"TL;DR\"></a>TL;DR</h2><hr>\n<ul>\n<li>相比字面量对象，Map 的 key 可以是任意类型</li>\n<li>相比子面量对象，Map 可直接通过进行遍历，遍历的顺序为<code>key`</code>value`插入的顺序</li>\n<li>Map 可以方便的对子元素进行增删改查，内部存储其实为数组类型，基本操作的时间复杂度为 n</li>\n<li>WeakMap 键必须是对象，为对象的弱引用，在某些场景下可方便的避免内存泄漏</li>\n</ul>","keywords":null,"cover":null,"content":null,"text":"TL;DR相比字面量对象，Map 的 key 可以是任意类型相比子面量对象，Map 可直接通过进行遍历，遍历的顺序为key`value`插入的顺序Map 可以方便的对子元素进行增删改查，内部存储其实为数组类型，基本操作的时间复杂度为 nWeakMap 键必须是对象，为对象的弱引用","link":"","raw":null,"photos":[],"categories":[{"name":"js","slug":"js","count":3,"path":"api/categories/js.json"}],"tags":[{"name":"Map","slug":"Map","count":1,"path":"api/tags/Map.json"},{"name":"WeakMap","slug":"WeakMap","count":1,"path":"api/tags/WeakMap.json"}]},{"title":"js Number详解","slug":"js Number详解","date":"2019-03-17T16:00:00.000Z","updated":"2019-03-20T02:26:17.709Z","comments":true,"path":"api/articles/js Number详解.json","excerpt":"<h2 id=\"TL-DR\"><a href=\"#TL-DR\" class=\"headerlink\" title=\"TL;DR\"></a>TL;DR</h2><hr>\n<ul>\n<li>Number 最大安全整数为 <code>Math.pow(2, 53) - 1</code></li>\n<li>Number.MAX_VALUE round 成 Infinity 至少加上能被四舍五入到 <code>Math.pow(2, 970)</code></li>\n<li>位运算符处理数据之前需要转换为32位进行处理，处理完后再转换为 64 位</li>\n</ul>","keywords":null,"cover":"https://ws1.sinaimg.cn/large/006tKfTcly1g18c4pud5dj30hx02st9q.jpg","content":null,"text":"TL;DRNumber 最大安全整数为 Math.pow(2, 53) - 1Number.MAX_VALUE round 成 Infinity 至少加上能被四舍五入到 Math.pow(2, 970)位运算符处理数据之前需要转换为32位进行处理，处理完后再转换为 64 位文章思","link":"","raw":null,"photos":[],"categories":[{"name":"js","slug":"js","count":3,"path":"api/categories/js.json"}],"tags":[{"name":"number","slug":"number","count":1,"path":"api/tags/number.json"}]},{"title":"理解apply,call,bind","slug":"理解apply,call,bind","date":"2019-03-03T16:00:00.000Z","updated":"2019-03-04T05:37:34.724Z","comments":true,"path":"api/articles/理解apply,call,bind.json","excerpt":"<p>之前对 js 的 apply、call、bind 方法零零散散有过一些了解，知道它们可以改变函数运行时的 this。今天来深入理解一番。</p>\n<p>其实很多人心想不就是绑定 this 嘛，有什么的。</p>\n<p>好，那么这句代码何解？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Function.apply.bind(Math.max, null);</span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"之前对 js 的 apply、call、bind 方法零零散散有过一些了解，知道它们可以改变函数运行时的 this。今天来深入理解一番。其实很多人心想不就是绑定 this 嘛，有什么的。好，那么这句代码何解？1<br>Function.apply.bind(Math.max, n","link":"","raw":null,"photos":[],"categories":[{"name":"js","slug":"js","count":3,"path":"api/categories/js.json"}],"tags":[{"name":"apply","slug":"apply","count":1,"path":"api/tags/apply.json"},{"name":"call","slug":"call","count":1,"path":"api/tags/call.json"},{"name":"bind","slug":"bind","count":1,"path":"api/tags/bind.json"}]}]}