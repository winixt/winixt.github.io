{"name":"react","slug":"react","count":5,"postlist":[{"title":"react key","slug":"react key","date":"2019-02-24T04:20:08.113Z","updated":"2019-02-24T04:20:08.113Z","comments":true,"path":"api/articles/react key.json","excerpt":"<p>react 核心开发人员说之后可能不再需要 key，趁它还在赶紧去了解一泼，逃～～～</p>","keywords":null,"cover":"https://ws2.sinaimg.cn/large/006tKfTcgy1fo5t530snoj30u40eqtp7.jpg","content":null,"text":"react 核心开发人员说之后可能不再需要 key，趁它还在赶紧去了解一泼，逃～～～ [Figure] 这样 react 会发现 key 为 doxiu、niye 的节点并没有改变，只需移动一下位置，再新增一个 key=”xueyx” 的节点。react 使用 key 识别列表子","link":"","raw":null,"photos":[],"categories":[{"name":"react","slug":"react","count":5,"path":"api/categories/react.json"}],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"},{"name":"key","slug":"key","count":1,"path":"api/tags/key.json"}]},{"title":"react16 系列（1）","slug":"react16 系列（1） ","date":"2018-05-29T16:00:00.000Z","updated":"2019-03-01T06:15:05.087Z","comments":true,"path":"api/articles/react16 系列（1） .json","excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><hr>\n<p>近来一直忙其他事，没怎么和 react 打过招呼了，转眼 react 已经跟新到了 16.2 版本，并且带来了很多重要的变更:</p>","keywords":null,"cover":"https://ws2.sinaimg.cn/large/006tKfTcly1fnxip7ozvqj30ui0a8q5d.jpg","content":null,"text":"前言近来一直忙其他事，没怎么和 react 打过招呼了，转眼 react 已经跟新到了 16.2 版本，并且带来了很多重要的变更:render 可以返回字符串（String）和片段（fragments)Error Boundary 处理错误组件Portals 将组件渲染到当前组件","link":"","raw":null,"photos":[],"categories":[{"name":"react","slug":"react","count":5,"path":"api/categories/react.json"}],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"},{"name":"react16","slug":"react16","count":1,"path":"api/tags/react16.json"}]},{"title":"react事件系统","slug":"react事件系统","date":"2019-02-27T16:00:00.000Z","updated":"2019-03-01T04:00:35.082Z","comments":true,"path":"api/articles/react事件系统.json","excerpt":"<h2 id=\"TL-DR\"><a href=\"#TL-DR\" class=\"headerlink\" title=\"TL;DR\"></a>TL;DR</h2><hr>\n<ul>\n<li>react16.8.3</li>\n<li>react 事件系统分为<code>事件注册</code>和<code>事件分发</code>两个阶段。</li>\n<li>事件注册阶段将<strong>大部分</strong>事件绑定到 document，在事件分发阶段调用 <code>dispatchEvent</code>进行事件捕获、事件冒泡分发。</li>\n<li>事件分发阶段会先根据事件类型调用对应 EventPlugin 进行事件合成，捕获和冒泡阶段会执行的 listener 都会存储到 event._dispatchListeners</li>\n</ul>","keywords":null,"cover":"https://ws1.sinaimg.cn/large/006tKfTcly1g0mfic97rnj315i0ck43w.jpg","content":null,"text":"TL;DRreact16.8.3react 事件系统分为事件注册和事件分发两个阶段。事件注册阶段将大部分事件绑定到 document，在事件分发阶段调用 dispatchEvent进行事件捕获、事件冒泡分发。事件分发阶段会先根据事件类型调用对应 EventPlugin 进行事件合","link":"","raw":null,"photos":[],"categories":[{"name":"react","slug":"react","count":5,"path":"api/categories/react.json"}],"tags":[{"name":"事件系统","slug":"事件系统","count":1,"path":"api/tags/事件系统.json"}]},{"title":"react生命周期","slug":"react生命周期","date":"2019-02-28T16:00:00.000Z","updated":"2019-03-01T09:23:25.162Z","comments":true,"path":"api/articles/react生命周期.json","excerpt":"<p>react在 ^16.4 版本进行生命周期的变更，废除了 <code>componentWillMount</code>,<code>componentWillReceiveProps</code>,<code>componentWillUpdate</code>，新引入了两个生命周期函数 <code>getDerivedStateFromProps</code>,<code>getSnapshotBeforeUpdate</code>。</p>","keywords":null,"cover":"https://ws2.sinaimg.cn/large/006tKfTcly1g0n8wrg0v1j30uk0hldi8.jpg","content":null,"text":"react在 ^16.4 版本进行生命周期的变更，废除了 componentWillMount,componentWillReceiveProps,componentWillUpdate，新引入了两个生命周期函数 getDerivedStateFromProps,getSnaps","link":"","raw":null,"photos":[],"categories":[{"name":"react","slug":"react","count":5,"path":"api/categories/react.json"}],"tags":[{"name":"生命周期","slug":"生命周期","count":1,"path":"api/tags/生命周期.json"}]},{"title":"实现一个share state hook","slug":"实现一个share state hook","date":"2019-03-08T16:00:00.000Z","updated":"2019-03-09T07:09:48.874Z","comments":true,"path":"api/articles/实现一个share state hook.json","excerpt":"<h2 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h2><hr>\n<p>react hooks 目前主要作用在于通过 useState 等函数实现<strong>状态逻辑</strong>共享，而不是状态共享。state 共享依旧需要 redux 等库去实现。redux 对于大型应用确实是一个不错的选择。但是写 action、reducers 难受呀？同意的请往下看，不同意的请摁 ⌘ + w。</p>","keywords":null,"cover":null,"content":null,"text":"现状react hooks 目前主要作用在于通过 useState 等函数实现状态逻辑共享，而不是状态共享。state 共享依旧需要 redux 等库去实现。redux 对于大型应用确实是一个不错的选择。但是写 action、reducers 难受呀？同意的请往下看，不同意的请摁","link":"","raw":null,"photos":[],"categories":[{"name":"react","slug":"react","count":5,"path":"api/categories/react.json"}],"tags":[{"name":"hooks","slug":"hooks","count":1,"path":"api/tags/hooks.json"}]}]}