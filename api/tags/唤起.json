{"name":"唤起","slug":"唤起","count":1,"postlist":[{"title":"H5 唤起 APP","slug":"H5 唤起 APP","date":"2018-08-29T02:05:47.051Z","updated":"2019-02-24T12:01:08.852Z","comments":true,"path":"api/articles/H5 唤起 APP.json","excerpt":"","keywords":null,"cover":"https://ws2.sinaimg.cn/large/006tNbRwly1fyistf68ydj30xc0m8aiv.jpg","content":"<p><img src=\"https://ws2.sinaimg.cn/large/006tNbRwly1fyistf68ydj30xc0m8aiv.jpg\" alt=\"H5唤起APP\"></p>\n<p><a href=\"https://churaumi.okinawa/sc/area/the-kuroshio/kuroshio/\" target=\"_blank\" rel=\"noopener\"><font color=\"grey\">图片来源</font></a></p>\n<p>为了向我们的APP导流，一些分享出去的页面和大部分的活动页我们希望能够直接由其他平台（微信、QQ、微博、浏览器）等直接唤起我们的APP。但是其他平台更多的是希望用户停留在自己平台内，进而阻止用户唤起第三方APP的操作。</p>\n<p>两种意愿的冲突引发了平台APP和第三方APP在唤起功能中的博弈。对于我们第三方APP，如何才能在这场博弈中获得最优解呢？</p>\n<h2 id=\"没有银弹，只有针对各种平台的导弹\"><a href=\"#没有银弹，只有针对各种平台的导弹\" class=\"headerlink\" title=\"没有银弹，只有针对各种平台的导弹\"></a>没有银弹，只有针对各种平台的导弹</h2><p>由于各个平台对唤起行为的封锁方式不同，以及我们业务高频需求场景不同，需要针对不同平台做特殊处理。</p>\n<p>针对两个系统和4个高频平台做分析。（为了简化流程，这里我们只针对三个平台做分析，其他平台分析思维类似）<br><img src=\"https://ws2.sinaimg.cn/large/006tNbRwly1fyitljsbjtj314x0u01ey.jpg\" alt=\"APP唤起流程\"></p>\n<h3 id=\"IOS\"><a href=\"#IOS\" class=\"headerlink\" title=\"IOS\"></a>IOS</h3><p>ios &gt;= 9.0 支持新的 Universal Links 唤起协议，这里我们简称 link 协议，不清楚的请自行 google。大部分平台也支持。</p>\n<p>微信<strong>禁</strong>了 link 协议，使用 link 链接依然无法唤起 APP，但是我们可以将 link 链接对应到一个下载页，引导用户 Safari 打开，当用户点击 Safari 打开的时候直接触发 link 协议，进而直接唤起 APP。⚠️ 这里是直接唤起 APP，不需要经过 Safari 中转。</p>\n<p>微博、QQ、Safari 都是没有禁用 link 协议的，可以直接使用。</p>\n<p>针对默写禁用 link 协议浏览器可以尝试使用 schema 唤起协议。</p>\n<p>有些平台不支持直接跳 App Store，需要通过 itunes 平台</p>\n<p><a href=\"https://itunes.apple.com/cn/app\" target=\"_blank\" rel=\"noopener\">https://itunes.apple.com/cn/app</a> + url</p>\n<h3 id=\"Anroid\"><a href=\"#Anroid\" class=\"headerlink\" title=\"Anroid\"></a>Anroid</h3><p>android 唤起使用 schema 协议。</p>\n<p>android 微信没有 link 协议可以使用，可以实现一个下载页，在下载页面引导用户浏览器打开，用户通过浏览器打开的时候直接触发唤起脚本。相比于 ios 微信，唤起过程中间多了一层浏览器中转（具体看浏览器实现，有些浏览器有弹窗让用户确认是否唤起 APP ）</p>\n<p>对于禁用 schema 协议的平台来说都可以采用针对微信的方案。</p>\n<p>没有禁用 schema 协议的直接使用 schema 协议就好。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>有些应用在微信能够直接唤起 APP，是因为这些公司与微信有深度合租关系，在微信白名单内。</p>\n<p>有些应用在微信能通过应用宝唤起 APP，是因为在应用宝上，他们的应用满足下面四个条件之一（可以申请 APP link)</p>\n<ul>\n<li>应用评级达到A级； </li>\n<li>应用微下载日访问量达到10W/天； </li>\n<li>项目/应用参加腾讯“双百”扶持计划； </li>\n<li>应用由腾讯投资占股。</li>\n</ul>\n<p>如何您的应用符合上面四个条件之一，可以使用如下形式拼接 url:</p>\n<p><a href=\"http://a.app.qq.com/o/simple.jsp?pkgname=com.xx.abc&amp;android_schema=appname://a/b?url=https://www.a.com/b/c.html\" target=\"_blank\" rel=\"noopener\">http://a.app.qq.com/o/simple.jsp?pkgname=com.xx.abc&amp;android_schema=appname://a/b?url=https://www.a.com/b/c.html</a> </p>\n<h3 id=\"为什么要使用下载页面？\"><a href=\"#为什么要使用下载页面？\" class=\"headerlink\" title=\"为什么要使用下载页面？\"></a>为什么要使用下载页面？</h3><p>可能会有同学问，上文唤起流程图，唤不起的之后的下载流程为什么走下载页，而不是直接下载。考虑到两个因素：</p>\n<ol>\n<li>平台差异化严重，笔者暂没找到合适的办法，判断用户是否唤起 APP 成功，如果用户唤起成功还让用户下载是非常不好的体验。（如果你们有更好的方案，欢迎下方留言）</li>\n<li>将唤起下载逻辑统一封装一个下载|唤起模块易于代码的维护和管理。</li>\n</ol>\n","text":" [Figure] IOSios &gt;= 9.0 支持新的 Universal Links 唤起协议，这里我们简称 link 协议，不清楚的请自行 google。大部分平台也支持。微信禁了 link 协议，使用 link 链接依然无法唤起 APP，但是我们可以将 link 链","link":"","raw":null,"photos":[],"categories":[{"name":"H5","slug":"H5","count":1,"path":"api/categories/H5.json"}],"tags":[{"name":"唤起","slug":"唤起","count":1,"path":"api/tags/唤起.json"}]}]}