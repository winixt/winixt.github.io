{"title":"box-sizing","slug":"box-sizing","date":"2019-02-24T04:20:08.111Z","updated":"2019-02-24T04:20:08.111Z","comments":true,"path":"api/articles/box-sizing.json","photos":[],"link":"","excerpt":"想必大多数人都用过 box-sizing 属性吧？那么这个属性的值对应的 css 盒子模型宽高计算方式有什么区别呢？","covers":["https://ws1.sinaimg.cn/large/006tKfTcgy1focoji9wr3j30jg0b4dg8.jpg","https://ws1.sinaimg.cn/large/006tKfTcgy1focqh7xvvhj30to0g6aal.jpg","https://ws1.sinaimg.cn/large/006tKfTcgy1focs9nwrtsj31100kaq5y.jpg","https://ws3.sinaimg.cn/large/006tKfTcgy1focsihytiwj310u0ku41q.jpg"],"content":"<p>想必大多数人都用过 box-sizing 属性吧？那么这个属性的值对应的 css 盒子模型宽高计算方式有什么区别呢？</p>\n<a id=\"more\"></a>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1focoji9wr3j30jg0b4dg8.jpg\" alt=\"图片\"></p>\n<h3 id=\"css-盒子模型\"><a href=\"#css-盒子模型\" class=\"headerlink\" title=\"css 盒子模型\"></a>css 盒子模型</h3><hr>\n<p>首先我们来看看 css 盒子模型宽度和高度的计算：</p>\n<p>宽度 = border(left&amp;&amp;right) + padding(left&amp;&amp;right) + contentWidth(或者手动设置的元素宽度)</p>\n<p>高度 = border(top&amp;&amp;bottom) + padding(top&amp;&amp;bottom) + contentHeight(或者手动设置的元素高度)</p>\n<p>这看起来可能会有些抽象，我们通过图片来简单讲解一下：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1focqh7xvvhj30to0g6aal.jpg\" alt=\"图片\"></p>\n<p>如图所示，盒子的宽度 = 40(px) <em> 2 + 2(px) </em> 2 + 236(px) = 320px; 盒子高度计算方式类似。</p>\n<h3 id=\"box-sizing\"><a href=\"#box-sizing\" class=\"headerlink\" title=\"box-sizing\"></a>box-sizing</h3><hr>\n<p>用于改变 css 盒子模型计算宽高的方式，有两个值，一个 content-box(默认值)，另一个 border-box。下面我们来分析一下这两个值。</p>\n<h4 id=\"content-box\"><a href=\"#content-box\" class=\"headerlink\" title=\"content-box\"></a>content-box</h4><p>content-box 是默认值。它是如何计算元素的宽高的呢？如下图所示首先我们设置 box 的宽高为 100px，边宽 2px，内边距（padding) 10px：</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tKfTcgy1focs9nwrtsj31100kaq5y.jpg\" alt=\"图片\"></p>\n<p>然后 WTF，box 宽度变为 124 px 了? 明明我是想设置宽度为 100px 的呀？这种情况是不是有点似曾相识的感觉【滑稽】<br>注意: content-box 为默认值所以不用写 box-sizing: content-box; 也行，浏览器会自动加上。</p>\n<p>其实当 box-sizing 为 content-box 的时候，如果你设置元素宽度（width）或高度（height），实际上设置的是 content 的宽高（标题图的content）并不是盒子的宽高。也就是说实际宽度为：</p>\n<p>宽度 = border + padding + width(你手动设置的宽度)</p>\n<h4 id=\"border-box\"><a href=\"#border-box\" class=\"headerlink\" title=\"border-box\"></a>border-box</h4><p>如果我们给 box 设置 box-sizing: border-box 会发生什么呢？如下图：</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tKfTcgy1focsihytiwj310u0ku41q.jpg\" alt=\"图片\"></p>\n<p>我们可以看到 box 的宽高变回 100px * 100px 了，好神奇呀，这就是我们想要的答案。</p>\n<p>如果我们给元素设置 box-sizing: border-box; 那么该元素的宽高计算方式为（以宽举例）：</p>\n<p>宽度 = width(你手动设置的宽度)</p>\n<p>width(你手动设置的宽度) =  border + padding + content;</p>\n<p>既然设置为 border-box 是我们更期望的渲染行为，那么我们是否应该设置全部元素为 border-box 呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">    box-sizing: border-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案是否，因为大部分元素你不需要手动设置宽高，在需要手动设置宽高的元素上再使用是一种更好的选择。当然你要这么使用也没什么问题～</p>\n","categories":[{"name":"css","slug":"css","count":2,"path":"api/categories/css.json"}],"tags":[{"name":"box-sizing","slug":"box-sizing","count":1,"path":"api/tags/box-sizing.json"},{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"}]}